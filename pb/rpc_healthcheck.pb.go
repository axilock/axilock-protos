// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.3
// source: rpc_healthcheck.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clientver     string                 `protobuf:"bytes,1,opt,name=clientver,proto3" json:"clientver,omitempty"`
	Org           string                 `protobuf:"bytes,2,opt,name=org,proto3" json:"org,omitempty"`
	AuthToken     string                 `protobuf:"bytes,3,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	Repourl       string                 `protobuf:"bytes,4,opt,name=repourl,proto3" json:"repourl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_rpc_healthcheck_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_healthcheck_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_rpc_healthcheck_proto_rawDescGZIP(), []int{0}
}

func (x *HealthRequest) GetClientver() string {
	if x != nil {
		return x.Clientver
	}
	return ""
}

func (x *HealthRequest) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *HealthRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *HealthRequest) GetRepourl() string {
	if x != nil {
		return x.Repourl
	}
	return ""
}

type HealthResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Backendver      string                 `protobuf:"bytes,1,opt,name=backendver,proto3" json:"backendver,omitempty"`
	LatestClientver string                 `protobuf:"bytes,2,opt,name=latest_clientver,json=latestClientver,proto3" json:"latest_clientver,omitempty"`
	Toupdate        bool                   `protobuf:"varint,3,opt,name=toupdate,proto3" json:"toupdate,omitempty"`
	Hookslist       string                 `protobuf:"bytes,4,opt,name=hookslist,proto3" json:"hookslist,omitempty"` //TODO : handle case when hooks are updated
	Cliupdatepath   string                 `protobuf:"bytes,5,opt,name=cliupdatepath,proto3" json:"cliupdatepath,omitempty"`
	Systemstatus    string                 `protobuf:"bytes,6,opt,name=systemstatus,proto3" json:"systemstatus,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_rpc_healthcheck_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_healthcheck_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_rpc_healthcheck_proto_rawDescGZIP(), []int{1}
}

func (x *HealthResponse) GetBackendver() string {
	if x != nil {
		return x.Backendver
	}
	return ""
}

func (x *HealthResponse) GetLatestClientver() string {
	if x != nil {
		return x.LatestClientver
	}
	return ""
}

func (x *HealthResponse) GetToupdate() bool {
	if x != nil {
		return x.Toupdate
	}
	return false
}

func (x *HealthResponse) GetHookslist() string {
	if x != nil {
		return x.Hookslist
	}
	return ""
}

func (x *HealthResponse) GetCliupdatepath() string {
	if x != nil {
		return x.Cliupdatepath
	}
	return ""
}

func (x *HealthResponse) GetSystemstatus() string {
	if x != nil {
		return x.Systemstatus
	}
	return ""
}

func (x *HealthResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ClientUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientVer     string                 `protobuf:"bytes,1,opt,name=client_ver,json=clientVer,proto3" json:"client_ver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientUpdateRequest) Reset() {
	*x = ClientUpdateRequest{}
	mi := &file_rpc_healthcheck_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientUpdateRequest) ProtoMessage() {}

func (x *ClientUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_healthcheck_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientUpdateRequest.ProtoReflect.Descriptor instead.
func (*ClientUpdateRequest) Descriptor() ([]byte, []int) {
	return file_rpc_healthcheck_proto_rawDescGZIP(), []int{2}
}

func (x *ClientUpdateRequest) GetClientVer() string {
	if x != nil {
		return x.ClientVer
	}
	return ""
}

type ClientUpdateResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ToUpdate        string                 `protobuf:"bytes,1,opt,name=to_update,json=toUpdate,proto3" json:"to_update,omitempty"`
	LatestClientver string                 `protobuf:"bytes,2,opt,name=latest_clientver,json=latestClientver,proto3" json:"latest_clientver,omitempty"`
	Cliupdatepath   string                 `protobuf:"bytes,3,opt,name=cliupdatepath,proto3" json:"cliupdatepath,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ClientUpdateResponse) Reset() {
	*x = ClientUpdateResponse{}
	mi := &file_rpc_healthcheck_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientUpdateResponse) ProtoMessage() {}

func (x *ClientUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_healthcheck_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientUpdateResponse.ProtoReflect.Descriptor instead.
func (*ClientUpdateResponse) Descriptor() ([]byte, []int) {
	return file_rpc_healthcheck_proto_rawDescGZIP(), []int{3}
}

func (x *ClientUpdateResponse) GetToUpdate() string {
	if x != nil {
		return x.ToUpdate
	}
	return ""
}

func (x *ClientUpdateResponse) GetLatestClientver() string {
	if x != nil {
		return x.LatestClientver
	}
	return ""
}

func (x *ClientUpdateResponse) GetCliupdatepath() string {
	if x != nil {
		return x.Cliupdatepath
	}
	return ""
}

var File_rpc_healthcheck_proto protoreflect.FileDescriptor

var file_rpc_healthcheck_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x70, 0x63, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x0d,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6f,
	0x72, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6f, 0x75, 0x72, 0x6c, 0x22, 0x9a, 0x02, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x76, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x34, 0x0a, 0x13, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x76, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c,
	0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x70, 0x61, 0x74, 0x68,
	0x32, 0x8d, 0x01, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x70, 0x63, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x44, 0x6f, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x14, 0x5a, 0x12, 0x73, 0x65, 0x63, 0x6b, 0x72, 0x69, 0x74, 0x2d, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_healthcheck_proto_rawDescOnce sync.Once
	file_rpc_healthcheck_proto_rawDescData = file_rpc_healthcheck_proto_rawDesc
)

func file_rpc_healthcheck_proto_rawDescGZIP() []byte {
	file_rpc_healthcheck_proto_rawDescOnce.Do(func() {
		file_rpc_healthcheck_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_healthcheck_proto_rawDescData)
	})
	return file_rpc_healthcheck_proto_rawDescData
}

var file_rpc_healthcheck_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rpc_healthcheck_proto_goTypes = []any{
	(*HealthRequest)(nil),         // 0: pb.HealthRequest
	(*HealthResponse)(nil),        // 1: pb.HealthResponse
	(*ClientUpdateRequest)(nil),   // 2: pb.ClientUpdateRequest
	(*ClientUpdateResponse)(nil),  // 3: pb.ClientUpdateResponse
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_rpc_healthcheck_proto_depIdxs = []int32{
	4, // 0: pb.HealthResponse.created_at:type_name -> google.protobuf.Timestamp
	2, // 1: pb.HealthService.ClientUpdateRpc:input_type -> pb.ClientUpdateRequest
	0, // 2: pb.HealthService.DoHealthCheck:input_type -> pb.HealthRequest
	3, // 3: pb.HealthService.ClientUpdateRpc:output_type -> pb.ClientUpdateResponse
	1, // 4: pb.HealthService.DoHealthCheck:output_type -> pb.HealthResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_healthcheck_proto_init() }
func file_rpc_healthcheck_proto_init() {
	if File_rpc_healthcheck_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_healthcheck_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_healthcheck_proto_goTypes,
		DependencyIndexes: file_rpc_healthcheck_proto_depIdxs,
		MessageInfos:      file_rpc_healthcheck_proto_msgTypes,
	}.Build()
	File_rpc_healthcheck_proto = out.File
	file_rpc_healthcheck_proto_rawDesc = nil
	file_rpc_healthcheck_proto_goTypes = nil
	file_rpc_healthcheck_proto_depIdxs = nil
}
