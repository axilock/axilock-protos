// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.3
// source: rpc_commit.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendCommitDataRequest struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Metadata      string                                 `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Sessionid     string                                 `protobuf:"bytes,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Repourl       string                                 `protobuf:"bytes,3,opt,name=repourl,proto3" json:"repourl,omitempty"`
	Commits       []*SendCommitDataRequest_CommitObjects `protobuf:"bytes,4,rep,name=commits,proto3" json:"commits,omitempty"`
	PushTime      *timestamppb.Timestamp                 `protobuf:"bytes,5,opt,name=push_time,json=pushTime,proto3" json:"push_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCommitDataRequest) Reset() {
	*x = SendCommitDataRequest{}
	mi := &file_rpc_commit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCommitDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommitDataRequest) ProtoMessage() {}

func (x *SendCommitDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_commit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommitDataRequest.ProtoReflect.Descriptor instead.
func (*SendCommitDataRequest) Descriptor() ([]byte, []int) {
	return file_rpc_commit_proto_rawDescGZIP(), []int{0}
}

func (x *SendCommitDataRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *SendCommitDataRequest) GetSessionid() string {
	if x != nil {
		return x.Sessionid
	}
	return ""
}

func (x *SendCommitDataRequest) GetRepourl() string {
	if x != nil {
		return x.Repourl
	}
	return ""
}

func (x *SendCommitDataRequest) GetCommits() []*SendCommitDataRequest_CommitObjects {
	if x != nil {
		return x.Commits
	}
	return nil
}

func (x *SendCommitDataRequest) GetPushTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PushTime
	}
	return nil
}

type SendCommitDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCommitDataResponse) Reset() {
	*x = SendCommitDataResponse{}
	mi := &file_rpc_commit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCommitDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommitDataResponse) ProtoMessage() {}

func (x *SendCommitDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_commit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommitDataResponse.ProtoReflect.Descriptor instead.
func (*SendCommitDataResponse) Descriptor() ([]byte, []int) {
	return file_rpc_commit_proto_rawDescGZIP(), []int{1}
}

func (x *SendCommitDataResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SendCommitDataResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type SendCommitDataRequest_CommitObjects struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommitId      string                 `protobuf:"bytes,1,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	Commitauthor  string                 `protobuf:"bytes,2,opt,name=commitauthor,proto3" json:"commitauthor,omitempty"`
	Committime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=committime,proto3" json:"committime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCommitDataRequest_CommitObjects) Reset() {
	*x = SendCommitDataRequest_CommitObjects{}
	mi := &file_rpc_commit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCommitDataRequest_CommitObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommitDataRequest_CommitObjects) ProtoMessage() {}

func (x *SendCommitDataRequest_CommitObjects) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_commit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommitDataRequest_CommitObjects.ProtoReflect.Descriptor instead.
func (*SendCommitDataRequest_CommitObjects) Descriptor() ([]byte, []int) {
	return file_rpc_commit_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SendCommitDataRequest_CommitObjects) GetCommitId() string {
	if x != nil {
		return x.CommitId
	}
	return ""
}

func (x *SendCommitDataRequest_CommitObjects) GetCommitauthor() string {
	if x != nil {
		return x.Commitauthor
	}
	return ""
}

func (x *SendCommitDataRequest_CommitObjects) GetCommittime() *timestamppb.Timestamp {
	if x != nil {
		return x.Committime
	}
	return nil
}

var File_rpc_commit_proto protoreflect.FileDescriptor

var file_rpc_commit_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x02, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x70, 0x6f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x70, 0x6f, 0x75, 0x72, 0x6c, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x1a, 0x8c, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x6b, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0x5e, 0x0a,
	0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x14, 0x5a,
	0x12, 0x73, 0x65, 0x63, 0x6b, 0x72, 0x69, 0x74, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_commit_proto_rawDescOnce sync.Once
	file_rpc_commit_proto_rawDescData = file_rpc_commit_proto_rawDesc
)

func file_rpc_commit_proto_rawDescGZIP() []byte {
	file_rpc_commit_proto_rawDescOnce.Do(func() {
		file_rpc_commit_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_commit_proto_rawDescData)
	})
	return file_rpc_commit_proto_rawDescData
}

var file_rpc_commit_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rpc_commit_proto_goTypes = []any{
	(*SendCommitDataRequest)(nil),               // 0: pb.SendCommitDataRequest
	(*SendCommitDataResponse)(nil),              // 1: pb.SendCommitDataResponse
	(*SendCommitDataRequest_CommitObjects)(nil), // 2: pb.SendCommitDataRequest.CommitObjects
	(*timestamppb.Timestamp)(nil),               // 3: google.protobuf.Timestamp
}
var file_rpc_commit_proto_depIdxs = []int32{
	2, // 0: pb.SendCommitDataRequest.commits:type_name -> pb.SendCommitDataRequest.CommitObjects
	3, // 1: pb.SendCommitDataRequest.push_time:type_name -> google.protobuf.Timestamp
	3, // 2: pb.SendCommitDataResponse.created_at:type_name -> google.protobuf.Timestamp
	3, // 3: pb.SendCommitDataRequest.CommitObjects.committime:type_name -> google.protobuf.Timestamp
	0, // 4: pb.CommitDataService.SendCommitData:input_type -> pb.SendCommitDataRequest
	1, // 5: pb.CommitDataService.SendCommitData:output_type -> pb.SendCommitDataResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_rpc_commit_proto_init() }
func file_rpc_commit_proto_init() {
	if File_rpc_commit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_commit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_commit_proto_goTypes,
		DependencyIndexes: file_rpc_commit_proto_depIdxs,
		MessageInfos:      file_rpc_commit_proto_msgTypes,
	}.Build()
	File_rpc_commit_proto = out.File
	file_rpc_commit_proto_rawDesc = nil
	file_rpc_commit_proto_goTypes = nil
	file_rpc_commit_proto_depIdxs = nil
}
